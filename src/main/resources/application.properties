spring.application.name=mijnwoonplaats

spring.profiles.active=dev

# application.properties (default -> dev profile)

#spring.datasource.username=${DB_USER}
#spring.datasource.password=${DB_PASS}

#spring.datasource.url=jdbc:postgresql://mijnwoonplaatsdbcontainer:5432/db01


spring.datasource.driver-class-name=org.postgresql.Driver

# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.open-in-view = true

# Optional: automatically create/drop schema on startup
spring.jpa.hibernate.ddl-auto=update
spring.jpa.defer-datasource-initialization=true

# Database efficiency - storing in batches instead of one by one
spring.jpa.properties.hibernate.jdbc.batch_size=100
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# logging with slf4j and Logback
logging.level.root=WARN
logging.level.com.geertjankuip.mijnwoonplaats=DEBUG
logging.file.name=logs/myapp.log
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n

logging.logback.rollingpolicy.file-name-pattern=logs/myapp-%d{yyyy-MM-dd}.%i.log.gz
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=7
logging.logback.rollingpolicy.total-size-cap=100MB

# Api url's
myapp.api.woonplaatsen=https://api.pdok.nl/bzk/locatieserver/search/v3_1/suggest
myapp.api.woonplaatsenrequestparamq = type:woonplaats
myapp.api.woonplaatsdetails=https://api.pdok.nl/bzk/locatieserver/search/v3_1/lookup

myapp.api.postcodes = https://api.pdok.nl/bzk/locatieserver/search/v3_1/free
myapp.api.postcodesrequestparamq = type:postcode
myapp.api.postcodesrequestparamfl = postcode,woonplaatscode
myapp.api.postcodesrequestparamfq = woonplaatscode:
myapp.api.postcodesrequestparamrows = 100
myapp.api.postcodesrequestparamstart =

myapp.api.postcodedetails = https://api.pdok.nl/bzk/locatieserver/search/v3_1/lookup

# This cbs 'buurten' table is for the year 2023
# Request parameters (select, filter, top, skip) need to be prefixed with $
myapp.api.buurten=https://opendata.cbs.nl/ODataApi/OData/85618NED/TypedDataSet
myapp.api.buurtenrequestparamselect=ID,Gemeentenaam_1,WijkenEnBuurten,MeestVoorkomendePostcode_123,AantalInwoners_5,k_0Tot15Jaar_8,k_65JaarOfOuder_12,GemiddeldInkomenPerInwoner_81,AfstandTotGroteSupermarkt_116,AfstandTotSchool_118,MateVanStedelijkheid_125
myapp.api.buurtenrequestparamfilter=startswith(WijkenEnBuurten,'BU')
myapp.api.buurtenrequestparamtop=10
myapp.api.buurtenrequestparamskip=10

myapp.api.shop.kruidvat = https://www.kruidvat.nl/api/v2/kvn/stores?lang=nl&query=

endpoint.testinterval.milliseconds = 1500000

homepage.textfile=homepage.txt